{"version":3,"sources":["components/assets/logo.png","components/assets/me.jpg","components/NavigationBar.js","components/TimeCalculate.js","components/Cards.js","components/SLstats.js","components/LoadingScreen.js","components/Worldstats.js","components/CumulativeChart.js","components/DailyLineChart.js","components/DailyNewBarChart.js","components/DailyRecoverBar.js","components/DistrictBarChart.js","components/TableData.js","components/Footer.js","components/GetData.js","components/SwitchOnOff.js","components/Layout.js","components/ParticlesBG.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavigationBar","Navbar","expand","bg","variant","Brand","as","Link","to","Image","alt","src","logo","width","height","className","Toggle","aria-controls","Collapse","id","Nav","msToTime","milliseconds","secs","mins","hrs","days","TimeCalculate","updatedDateTime","today","Date","currentDateTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","differnce","Math","abs","replace","numberWithCommas","amount","toString","Cards","props","Card","background","text","Header","title","Body","Title","Footer","update","Styles","styled","div","SLstats","Jumbotron","Row","Col","sm","md","lg","details","local_new_cases","update_date_time","local_total_cases","local_total_number_of_individuals_in_hospitals","local_recovered","local_deaths","local_active_cases","LoadingScreen","style","position","marginTop","type","color","Worldstats","global_new_cases","global_total_cases","global_recovered","global_deaths","global_new_deaths","CumulativeChart","hospitalTotal","hospitalName","hospitals","num","push","treatment_local","hospital","name","takeHospitalValues","originalDoughnutDraw","Chart","controllers","doughnut","prototype","draw","helpers","extend","apply","this","arguments","chart","ctx","fontSize","toFixed","font","textBaseline","sum","i","config","data","datasets","length","textX","round","measureText","textY","fillText","chartData","labels","backgroundColor","borderColor","borderWidth","hoverBorderColor","options","display","fontFamily","fontColor","legend","cutoutPercentage","plugins","datalabels","DailyLineChart","state","dDate","dTotal","dRecover","dDeath","label","fill","pointBorderColor","pointBackgroundColor","pointRadius","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHitRadius","dActive","takeActive","maintainAspectRatio","usePointStyle","tooltips","mode","titleAlign","displayColors","titleFontSize","bodyFontSize","titleMarginBottom","bodySpacing","scales","xAxes","ticks","min","time","parser","unit","displayFormats","week","tooltipFormat","offset","gridLines","yAxes","borderDash","lineWidth","Component","DailyNewBarChart","dNewCases","takeNewCases","maxR","max","hoverBackgroundColor","offsetGridLines","stepSize","anchor","align","clip","DailyRecoverBar","dNewRecover","takeNewRecoveries","DistrictBarChart","districtAllData","districtData","takeActiveCases","sort","a","b","slice","districtValues","districts","cases","takeSeperateData","TableData","Container","fluid","xs","marginBottom","textAlign","created_at","Table","responsive","striped","bordered","hover","map","key","cumulative_total","cumulative_local","cumulative_foreign","treatment_total","treatment_foreign","icon","faDatabase","href","target","rel","GetData","chooseWhatToRender","done","dDone","disDone","undefined","axios","get","then","response","setState","hospital_data","catch","error","console","log","readRemoteFile","complete","results","SwitchOnOff","checked","handleChange","bind","onChange","handleDiameter","onColor","offColor","uncheckedIcon","checkedIcon","Layout","ParticlesBG","params","particles","number","value","density","enable","value_area","shape","stroke","polygon","nb_sides","image","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","left","top","About","margin","padding","me","roundedCircle","justifyContent","faLinkedin","faGithub","faFacebook","App","Fragment","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.84504e3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.324d1ff9.png\";","module.exports = __webpack_public_path__ + \"static/media/me.cc2138fd.jpg\";","import React from \"react\";\r\nimport { Navbar, Nav, Image } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"./assets/logo.png\";\r\n\r\nfunction NavigationBar() {\r\n  return (\r\n    <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand as={Link} to=\"/\">\r\n        <Image\r\n          alt=\"\"\r\n          src={logo}\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n        />{\" \"}\r\n        COVID-19 Dashboard\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Link as={Link} to=\"/\">\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to=\"/about\">\r\n            About\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","const TimeCalculate = (updatedDateTime) => {\r\n  let today = new Date();\r\n  let date =\r\n    today.getFullYear() + \"/\" + (today.getMonth() + 1) + \"/\" + today.getDate();\r\n  let time =\r\n    today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n  let currentDateTime = date + \" \" + time;\r\n  let differnce = Math.abs(\r\n    new Date(currentDateTime) - new Date(updatedDateTime.replace(/-/g, \"/\"))\r\n  );\r\n  return msToTime(differnce);\r\n};\r\n\r\nconst msToTime = (milliseconds) => {\r\n  let ms = milliseconds % 1000;\r\n  milliseconds = (milliseconds - ms) / 1000;\r\n  let secs = milliseconds % 60;\r\n  milliseconds = (milliseconds - secs) / 60;\r\n  let mins = milliseconds % 60;\r\n  milliseconds = (milliseconds - mins) / 60;\r\n  let hrs = milliseconds % 24;\r\n  let days = (milliseconds - hrs) / 24;\r\n\r\n  return days > 0\r\n    ? days > 1\r\n      ? days + \" days\"\r\n      : days + \" day\"\r\n    : hrs > 0\r\n    ? hrs > 1\r\n      ? hrs + \" hours\"\r\n      : hrs + \" hour\"\r\n    : mins > 0\r\n    ? mins > 1\r\n      ? mins + \" minutes\"\r\n      : mins + \" minute\"\r\n    : secs + \" seconds\";\r\n};\r\n\r\nexport default TimeCalculate;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport TimeCalculate from \"./TimeCalculate\";\r\n\r\nfunction Cards(props) {\r\n  return (\r\n    <Card bg={props.background} text=\"light\">\r\n      <Card.Header>{props.title}</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>{numberWithCommas(props.amount)}</Card.Title>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <small>updated {TimeCalculate(props.update)} ago</small>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst numberWithCommas = (amount) => {\r\n  return amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport { Row, Col, Jumbotron } from \"react-bootstrap\";\r\nimport Cards from \"./Cards\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Styles = styled.div`\r\n  .card {\r\n    margin: 20px 0;\r\n    text-align: center;\r\n  }\r\n  .card-title {\r\n    font-size: -webkit-xxx-large;\r\n  }\r\n  .jumbotron {\r\n    padding: 0 1rem;\r\n    background-color: transparent;\r\n    width: fit-content;\r\n    border-color: darkcyan;\r\n    border-style: dashed;\r\n    border-radius: 1rem;\r\n    margin: 10px auto 20px;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nfunction SLstats(props) {\r\n  return (\r\n    <Styles>\r\n      <Jumbotron>\r\n        <Row className=\"justify-content-center\">\r\n          <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n            <Cards\r\n              background=\"info\"\r\n              title=\"New Cases\"\r\n              as=\"h3\"\r\n              amount={props.details.local_new_cases}\r\n              update={props.details.update_date_time}\r\n            />\r\n          </Col>\r\n          <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n            <Cards\r\n              background=\"secondary\"\r\n              title=\"Total Cases\"\r\n              as=\"h3\"\r\n              amount={props.details.local_total_cases}\r\n              update={props.details.update_date_time}\r\n            />\r\n          </Col>\r\n          <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n            <Cards\r\n              background=\"warning\"\r\n              title=\"Total in Hospitals\"\r\n              as=\"h3\"\r\n              amount={\r\n                props.details.local_total_number_of_individuals_in_hospitals\r\n              }\r\n              update={props.details.update_date_time}\r\n            />\r\n          </Col>\r\n          <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n            <Cards\r\n              background=\"success\"\r\n              title=\"Total Recovered\"\r\n              as=\"h3\"\r\n              amount={props.details.local_recovered}\r\n              update={props.details.update_date_time}\r\n            />\r\n          </Col>\r\n          <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n            <Cards\r\n              background=\"dark\"\r\n              title=\"Total Deaths\"\r\n              as=\"h3\"\r\n              amount={props.details.local_deaths}\r\n              update={props.details.update_date_time}\r\n            />\r\n          </Col>\r\n          <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n            <Cards\r\n              background=\"danger\"\r\n              title=\"Active Cases\"\r\n              as=\"h3\"\r\n              amount={props.details.local_active_cases}\r\n              update={props.details.update_date_time}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Jumbotron>\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default SLstats;\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nfunction LoadingScreen(props) {\r\n  return (\r\n    <>\r\n      <div style={{ position: \"relative\" }}>\r\n        <div\r\n          className=\"d-flex justify-content-center align-items-center\"\r\n          style={{ marginTop: \"25vh\" }}\r\n        >\r\n          <ReactLoading type={\"spin\"} color={\"white\"} />\r\n        </div>\r\n        <h2 className=\"d-flex justify-content-center align-items-center\">\r\n          fetching data...\r\n        </h2>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;\r\n","import React from \"react\";\r\nimport { Row, Col, Jumbotron } from \"react-bootstrap\";\r\nimport Cards from \"./Cards\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Styles = styled.div`\r\n  .card {\r\n    margin: 20px 0;\r\n    text-align: center;\r\n  }\r\n  .card-title {\r\n    font-size: -webkit-xxx-large;\r\n  }\r\n  .jumbotron {\r\n    padding: 0 1rem;\r\n    background-color: transparent;\r\n    width: fit-content;\r\n    border-color: darkcyan;\r\n    border-style: dashed;\r\n    border-radius: 1rem;\r\n    margin: 10px auto 20px;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nfunction Worldstats(props) {\r\n  return (\r\n    <Styles>\r\n      <Jumbotron>\r\n        <Row className=\"justify-content-center\">\r\n          <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n            <Cards\r\n              background=\"info\"\r\n              title=\"New Cases\"\r\n              as=\"h3\"\r\n              amount={props.details.global_new_cases}\r\n              update={props.details.update_date_time}\r\n            />\r\n          </Col>\r\n          <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n            <Cards\r\n              background=\"secondary\"\r\n              title=\"Total Cases\"\r\n              as=\"h3\"\r\n              amount={props.details.global_total_cases}\r\n              update={props.details.update_date_time}\r\n            />\r\n          </Col>\r\n          <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n            <Cards\r\n              background=\"success\"\r\n              title=\"Total Recovered\"\r\n              as=\"h3\"\r\n              amount={props.details.global_recovered}\r\n              update={props.details.update_date_time}\r\n            />\r\n          </Col>\r\n          <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n            <Cards\r\n              background=\"dark\"\r\n              title=\"Total Deaths\"\r\n              as=\"h3\"\r\n              amount={props.details.global_deaths}\r\n              update={props.details.update_date_time}\r\n            />\r\n          </Col>\r\n          <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n            <Cards\r\n              background=\"danger\"\r\n              title=\"New Deaths\"\r\n              as=\"h3\"\r\n              amount={props.details.global_new_deaths}\r\n              update={props.details.update_date_time}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Jumbotron>\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default Worldstats;\r\n","import React from \"react\";\r\nimport { Doughnut, Chart } from \"react-chartjs-2\";\r\n\r\nfunction CumulativeChart(props) {\r\n  const staticColors = [\r\n    \"#f44336\",\r\n    \"#ef9a9a\",\r\n    \"#e91e63\",\r\n    \"#f48fb1\",\r\n    \"#9c27b0\",\r\n    \"#ce93d8\",\r\n    \"#673ab7\",\r\n    \"#b39ddb\",\r\n    \"#3f51b5\",\r\n    \"#9fa8da\",\r\n    \"#2196f3\",\r\n    \"#90caf9\",\r\n    \"#03a9f4\",\r\n    \"#81d4fa\",\r\n    \"#00bcd4\",\r\n    \"#80deea\",\r\n    \"#009688\",\r\n    \"#80cbc4\",\r\n    \"#4caf50\",\r\n    \"#a5d6a7\",\r\n    \"#8bc34a\",\r\n    \"#c5e1a5\",\r\n    \"#cddc39\",\r\n    \"#e6ee9c\",\r\n    \"#ffeb3b\",\r\n    \"#fff59d\",\r\n    \"#ffc107\",\r\n    \"#ffe082\",\r\n    \"#ff9800\",\r\n    \"#ffcc80\",\r\n    \"#546e7a\",\r\n    \"#F8BBD0\",\r\n    \"#D50000\",\r\n    \"#EF5350\",\r\n    \"#C51162\",\r\n    \"#E1BEE7\",\r\n    \"#6A1B9A\",\r\n    \"#AB47BC\",\r\n    \"#B388FF\",\r\n    \"#BBDEFB\",\r\n    \"#1565C0\",\r\n    \"#B3E5FC\",\r\n    \"#1976D2\",\r\n    \"#0097A7\",\r\n    \"#84FFFF\",\r\n  ];\r\n\r\n  let hospitalTotal = [];\r\n  let hospitalName = [];\r\n\r\n  const takeHospitalValues = (hospitals) => {\r\n    for (let num in hospitals) {\r\n      hospitalTotal.push(hospitals[num].treatment_local);\r\n      hospitalName.push(hospitals[num].hospital.name);\r\n    }\r\n  };\r\n  takeHospitalValues(props.hospitals);\r\n\r\n  const originalDoughnutDraw = Chart.controllers.doughnut.prototype.draw;\r\n  Chart.helpers.extend(Chart.controllers.doughnut.prototype, {\r\n    draw() {\r\n      originalDoughnutDraw.apply(this, arguments);\r\n\r\n      const chart = this.chart;\r\n      const width = chart.width;\r\n      const height = chart.height;\r\n      const ctx = chart.ctx;\r\n\r\n      const fontSize = (height / 100).toFixed(2);\r\n      ctx.font = `${fontSize}em Segoe UI`;\r\n      ctx.textBaseline = \"middle\";\r\n\r\n      let sum = 0;\r\n      for (let i = 0; i < chart.config.data.datasets[0].data.length; i++) {\r\n        sum += chart.config.data.datasets[0].data[i];\r\n      }\r\n\r\n      const text = sum;\r\n      const textX = Math.round((width - ctx.measureText(text).width) / 2);\r\n      const textY = height / 2;\r\n\r\n      ctx.fillText(text, textX, textY);\r\n    },\r\n  });\r\n\r\n  const chartData = {\r\n    labels: hospitalName,\r\n    datasets: [\r\n      {\r\n        data: hospitalTotal,\r\n        backgroundColor: staticColors,\r\n        borderColor: \"#282c34\",\r\n        borderWidth: 8,\r\n        hoverBorderColor: \"#fff\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    title: {\r\n      display: true,\r\n      text:\r\n        \"Total number of Sri Lankans who are currently on treatment / observation\",\r\n      fontSize: 20,\r\n      fontFamily: \"sans-serif\",\r\n      position: \"bottom\",\r\n      fontColor: \"#fff\",\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    cutoutPercentage: 60,\r\n    plugins: { datalabels: { display: false } },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Doughnut data={chartData} width={250} height={250} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CumulativeChart;\r\n","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Styles = styled.div`\r\n  .lineChart {\r\n    position: relative;\r\n    margin: auto;\r\n    min-height: 376px;\r\n    border: 2px solid #176672;\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nconst takeActive = (dTotal, dRecover, dDeath) => {\r\n  let dActive = [];\r\n  for (let num in dTotal) {\r\n    dActive.push(dTotal[num] - dRecover[num] - dDeath[num]);\r\n  }\r\n  return dActive;\r\n};\r\n\r\nclass DailyLineChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dDate: props.dDate,\r\n      dTotal: props.dTotal,\r\n      dRecover: props.dRecover,\r\n      dDeath: props.dDeath,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { dDate, dTotal, dRecover, dDeath } = this.state;\r\n    const dActive = takeActive(dTotal, dRecover, dDeath);\r\n\r\n    const minX = dDate[dDate.length - 27];\r\n    const data = {\r\n      labels: dDate,\r\n      datasets: [\r\n        {\r\n          label: \"Total Cases\",\r\n          fill: false,\r\n          borderColor: \"red\",\r\n          pointBorderColor: \"#fff\",\r\n          pointBackgroundColor: \"red\",\r\n          pointRadius: 2,\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 6,\r\n          pointHoverBorderWidth: 2,\r\n          pointHoverBackgroundColor: \"red\",\r\n          pointHoverBorderColor: \"#fff\",\r\n          pointHitRadius: 3,\r\n          data: dTotal,\r\n        },\r\n        {\r\n          label: \"Active Cases\",\r\n          fill: false,\r\n          borderColor: \"aqua\",\r\n          pointBorderColor: \"#fff\",\r\n          pointBackgroundColor: \"aqua\",\r\n          pointRadius: 2,\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 6,\r\n          pointHoverBorderWidth: 2,\r\n          pointHoverBackgroundColor: \"aqua\",\r\n          pointHoverBorderColor: \"#fff\",\r\n          pointHitRadius: 3,\r\n          data: dActive,\r\n        },\r\n        {\r\n          label: \"Total Recovered\",\r\n          fill: false,\r\n          borderColor: \"lawngreen\",\r\n          pointBorderColor: \"#fff\",\r\n          pointBackgroundColor: \"lawngreen\",\r\n          pointRadius: 2,\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 6,\r\n          pointHoverBorderWidth: 2,\r\n          pointHoverBackgroundColor: \"lawngreen\",\r\n          pointHoverBorderColor: \"#fff\",\r\n          pointHitRadius: 3,\r\n          data: dRecover,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      title: {\r\n        display: true,\r\n        text: \"Daily Statistics\",\r\n        fontSize: 26,\r\n        fontFamily: \"Arial\",\r\n        fontColor: \"#fff\",\r\n      },\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: true,\r\n        labels: {\r\n          fontColor: \"white\",\r\n          usePointStyle: true,\r\n          fontSize: 13,\r\n        },\r\n      },\r\n      tooltips: {\r\n        mode: \"index\",\r\n        position: \"nearest\",\r\n        titleAlign: \"center\",\r\n        displayColors: false,\r\n        titleFontSize: 15,\r\n        bodyFontSize: 13,\r\n        titleMarginBottom: 15,\r\n        bodySpacing: 10,\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              fontColor: \"#a9a9a9\",\r\n              min: minX,\r\n            },\r\n            type: \"time\",\r\n            time: {\r\n              parser: \"M/D/YY\",\r\n              unit: \"week\",\r\n              displayFormats: {\r\n                week: \"MMM DD\",\r\n              },\r\n              tooltipFormat: \"MMM DD\",\r\n            },\r\n            offset: true,\r\n            gridLines: {\r\n              display: false,\r\n              color: \"#fff\",\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: true,\r\n              color: \"#fff\",\r\n              borderDash: [10],\r\n              lineWidth: 0.2,\r\n            },\r\n            ticks: {\r\n              fontColor: \"#a9a9a9\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      plugins: { datalabels: { display: false } },\r\n    };\r\n\r\n    return (\r\n      <Styles>\r\n        <div className=\"lineChart\">\r\n          <Line data={data} options={options} />\r\n        </div>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyLineChart;\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport styled from \"styled-components\";\r\nimport \"chartjs-plugin-datalabels\";\r\n\r\nconst Styles = styled.div`\r\n  .barChart {\r\n    position: relative;\r\n    margin: auto;\r\n    min-height: 376px;\r\n    border: 2px solid #176672;\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nconst takeNewCases = (dTotal) => {\r\n  let dNewCases = [0];\r\n  let num;\r\n  for (num = 0; num < dTotal.length; num++) {\r\n    if (!(num + 1 === dTotal.length)) {\r\n      dNewCases.push(dTotal[num + 1] - dTotal[num]);\r\n    }\r\n  }\r\n  return dNewCases;\r\n};\r\n\r\nclass DailyNewBarChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dDate: props.dDate,\r\n      dTotal: props.dTotal,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { dDate, dTotal } = this.state;\r\n    const dNewCases = takeNewCases(dTotal);\r\n    let maxR = Math.max(...dNewCases);\r\n    if (maxR % 20 === 0) {\r\n      maxR = maxR + 20;\r\n    } else {\r\n      if (maxR % 20 > 13) {\r\n        maxR = 40 - (maxR % 20) + maxR;\r\n      } else {\r\n        maxR = 20 - (maxR % 20) + maxR;\r\n      }\r\n    }\r\n\r\n    const minX = dDate[dDate.length - 27];\r\n    const data = {\r\n      labels: dDate,\r\n      datasets: [\r\n        {\r\n          label: \"New Cases\",\r\n          backgroundColor: \"#17a2b8\",\r\n          borderColor: \"#0e6f7e\",\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: \"#64e0f3\",\r\n          hoverBorderColor: \"#0e6f7e\",\r\n          data: dNewCases,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      title: {\r\n        display: true,\r\n        text: \"Daily New Cases\",\r\n        fontSize: 26,\r\n        fontFamily: \"Arial\",\r\n        fontColor: \"#fff\",\r\n      },\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false,\r\n        labels: {\r\n          fontColor: \"white\",\r\n          usePointStyle: false,\r\n          fontSize: 13,\r\n        },\r\n      },\r\n      tooltips: {\r\n        mode: \"index\",\r\n        position: \"nearest\",\r\n        titleAlign: \"center\",\r\n        displayColors: false,\r\n        titleFontSize: 15,\r\n        bodyFontSize: 13,\r\n        titleMarginBottom: 15,\r\n        bodySpacing: 10,\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              fontColor: \"#a9a9a9\",\r\n              min: minX,\r\n            },\r\n            offset: true,\r\n            type: \"time\",\r\n            time: {\r\n              parser: \"M/D/YY\",\r\n              unit: \"week\",\r\n              displayFormats: {\r\n                week: \"MMM DD\",\r\n              },\r\n              tooltipFormat: \"MMM DD\",\r\n            },\r\n            gridLines: {\r\n              display: false,\r\n              color: \"#fff\",\r\n              offsetGridLines: true,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: true,\r\n              color: \"#fff\",\r\n              borderDash: [10],\r\n              lineWidth: 0.2,\r\n            },\r\n            ticks: {\r\n              fontColor: \"#a9a9a9\",\r\n              min: 0,\r\n              stepSize: 20,\r\n              max: maxR,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          display: true,\r\n          color: \"#fff\",\r\n          anchor: \"end\",\r\n          align: \"top\",\r\n          clip: \"true\",\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Styles>\r\n        <div className=\"barChart\">\r\n          <Bar data={data} options={options} />\r\n        </div>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyNewBarChart;\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport styled from \"styled-components\";\r\nimport \"chartjs-plugin-datalabels\";\r\n\r\nconst Styles = styled.div`\r\n  .barChart {\r\n    position: relative;\r\n    margin: auto;\r\n    min-height: 376px;\r\n    border: 2px solid #176672;\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nconst takeNewRecoveries = (dRecover) => {\r\n  let dNewRecover = [0];\r\n  let num;\r\n  for (num = 0; num < dRecover.length; num++) {\r\n    if (!(num + 1 === dRecover.length)) {\r\n      dNewRecover.push(dRecover[num + 1] - dRecover[num]);\r\n    }\r\n  }\r\n  return dNewRecover;\r\n};\r\n\r\nclass DailyRecoverBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dDate: props.dDate,\r\n      dRecover: props.dRecover,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { dDate, dRecover } = this.state;\r\n    const dNewRecover = takeNewRecoveries(dRecover);\r\n    let maxR = Math.max(...dNewRecover);\r\n    if (maxR % 3 === 0) {\r\n      maxR = maxR + 3;\r\n    } else {\r\n      maxR = 3 - (maxR % 3) + maxR;\r\n    }\r\n\r\n    const minX = dDate[dDate.length - 27];\r\n    const data = {\r\n      labels: dDate,\r\n      datasets: [\r\n        {\r\n          label: \"New Recoveries\",\r\n          backgroundColor: \"#28a745\",\r\n          borderColor: \"#117428\",\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: \"#4fe973\",\r\n          hoverBorderColor: \"#117428\",\r\n          data: dNewRecover,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      title: {\r\n        display: true,\r\n        text: \"Daily New Recoveries\",\r\n        fontSize: 26,\r\n        fontFamily: \"Arial\",\r\n        fontColor: \"#fff\",\r\n      },\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false,\r\n        labels: {\r\n          fontColor: \"white\",\r\n          usePointStyle: false,\r\n          fontSize: 13,\r\n        },\r\n      },\r\n      tooltips: {\r\n        mode: \"index\",\r\n        position: \"nearest\",\r\n        titleAlign: \"center\",\r\n        displayColors: false,\r\n        titleFontSize: 15,\r\n        bodyFontSize: 13,\r\n        titleMarginBottom: 15,\r\n        bodySpacing: 10,\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              fontColor: \"#a9a9a9\",\r\n              min: minX,\r\n            },\r\n            offset: true,\r\n            type: \"time\",\r\n            time: {\r\n              parser: \"M/D/YY\",\r\n              unit: \"week\",\r\n              displayFormats: {\r\n                week: \"MMM DD\",\r\n              },\r\n              tooltipFormat: \"MMM DD\",\r\n            },\r\n            gridLines: {\r\n              display: false,\r\n              color: \"#fff\",\r\n              offsetGridLines: true,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: true,\r\n              color: \"#fff\",\r\n              borderDash: [10],\r\n              lineWidth: 0.2,\r\n            },\r\n            ticks: {\r\n              fontColor: \"#a9a9a9\",\r\n              min: 0,\r\n              stepSize: 3,\r\n              max: maxR,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          display: true,\r\n          color: \"#fff\",\r\n          anchor: \"end\",\r\n          align: \"top\",\r\n          clip: \"true\",\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Styles>\r\n        <div className=\"barChart\">\r\n          <Bar data={data} options={options} />\r\n        </div>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyRecoverBar;\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport styled from \"styled-components\";\r\nimport \"chartjs-plugin-datalabels\";\r\n\r\nconst Styles = styled.div`\r\n  .barChart {\r\n    position: relative;\r\n    margin: auto;\r\n    min-height: 376px;\r\n    border: 2px solid #176672;\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nconst takeActiveCases = (districtAllData) => {\r\n  let districtData = [];\r\n  let num;\r\n  for (num = 1; num <= 26; num++) {\r\n    districtData.push(districtAllData[num]);\r\n  }\r\n  return [districtData];\r\n};\r\n\r\nconst takeSeperateData = (districtData) => {\r\n  let districts = [];\r\n  let cases = [];\r\n  let num;\r\n  for (num = 0; num < districtData.length; num++) {\r\n    districts.push(districtData[num][0]);\r\n    cases.push(districtData[num][3]);\r\n  }\r\n  return [districts, cases];\r\n};\r\n\r\nclass DistrictBarChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      districtAllData: props.districtData,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let { districtAllData } = this.state;\r\n    let districtData = takeActiveCases(districtAllData);\r\n    districtData[0].sort((a, b) => {\r\n      return a[3] - b[3];\r\n    });\r\n\r\n    districtData = districtData[0].slice(16, 26);\r\n    districtData.sort();\r\n    const districtValues = takeSeperateData(districtData);\r\n\r\n    const districts = districtValues[0];\r\n    const cases = districtValues[1];\r\n    let maxR = Math.max(...cases);\r\n    if (maxR % 30 === 0) {\r\n      maxR = maxR + 30;\r\n    } else {\r\n      if (maxR % 30 > 15) {\r\n        maxR = 60 - (maxR % 30) + maxR;\r\n      } else {\r\n        maxR = 30 - (maxR % 30) + maxR;\r\n      }\r\n    }\r\n\r\n    const data = {\r\n      labels: districts,\r\n      datasets: [\r\n        {\r\n          label: \"Cases\",\r\n          backgroundColor: \"mediumvioletred\",\r\n          borderColor: \"#8d105f\",\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: \"#f346b4\",\r\n          hoverBorderColor: \"#8d105f\",\r\n          data: cases,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      title: {\r\n        display: true,\r\n        text: \"District Distribution (Most Critical)\",\r\n        fontSize: 26,\r\n        fontFamily: \"Arial\",\r\n        fontColor: \"#fff\",\r\n      },\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false,\r\n        labels: {\r\n          fontColor: \"white\",\r\n          usePointStyle: false,\r\n          fontSize: 13,\r\n        },\r\n      },\r\n      tooltips: {\r\n        mode: \"index\",\r\n        position: \"nearest\",\r\n        titleAlign: \"center\",\r\n        displayColors: false,\r\n        titleFontSize: 15,\r\n        bodyFontSize: 13,\r\n        titleMarginBottom: 15,\r\n        bodySpacing: 10,\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              fontColor: \"#a9a9a9\",\r\n            },\r\n            offset: true,\r\n            gridLines: {\r\n              display: false,\r\n              color: \"#fff\",\r\n              offsetGridLines: true,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: true,\r\n              color: \"#fff\",\r\n              borderDash: [10],\r\n              lineWidth: 0.2,\r\n            },\r\n            ticks: {\r\n              fontColor: \"#a9a9a9\",\r\n              min: 0,\r\n              stepSize: 30,\r\n              max: maxR,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          display: true,\r\n          color: \"#fff\",\r\n          anchor: \"end\",\r\n          align: \"top\",\r\n          clip: \"true\",\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Styles>\r\n        <div className=\"barChart\">\r\n          <Bar data={data} options={options} />\r\n        </div>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DistrictBarChart;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Row, Col, Container } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport TimeCalculate from \"./TimeCalculate\";\r\nimport CumulativeChart from \"./CumulativeChart\";\r\nimport DailyLineChart from \"./DailyLineChart\";\r\nimport DailyNewBarChart from \"./DailyNewBarChart\";\r\nimport DailyRecoverBar from \"./DailyRecoverBar\";\r\nimport DistrictBarChart from \"./DistrictBarChart\";\r\n\r\nconst Styles = styled.div`\r\n  .table-responsive {\r\n    position: relative;\r\n    height: 500px;\r\n    overflow-y: scroll;\r\n    width: 100%;\r\n  }\r\n  .container-fluid {\r\n    margin-bottom: 50px;\r\n  }\r\n  .col-12 {\r\n    margin-bottom: 10px;\r\n  }\r\n  .wrapAll1 {\r\n    border: 2px solid #176672;\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n  }\r\n  .wrapAll2 {\r\n    border: 2px solid #176672;\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport default class TableData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hospitals: props.hospitals,\r\n      dDate: props.dDate,\r\n      dTotal: props.dTotal,\r\n      dRecover: props.dRecover,\r\n      dDeath: props.dDeath,\r\n      districtData: props.districtData,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      hospitals,\r\n      dDate,\r\n      dTotal,\r\n      dRecover,\r\n      dDeath,\r\n      districtData,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Styles>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col\r\n              md={2}\r\n              sm={12}\r\n              xs={12}\r\n              lg={2}\r\n              style={{ marginBottom: \"0px\" }}\r\n            ></Col>\r\n            <Col md={8} sm={12} xs={12} lg={8}>\r\n              <DailyLineChart\r\n                dDate={dDate}\r\n                dTotal={dTotal}\r\n                dRecover={dRecover}\r\n                dDeath={dDeath}\r\n              />\r\n            </Col>\r\n            <Col\r\n              md={2}\r\n              sm={12}\r\n              xs={12}\r\n              lg={2}\r\n              style={{ marginBottom: \"0px\" }}\r\n            ></Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={4} sm={12} xs={12} lg={4}>\r\n              <DailyNewBarChart dDate={dDate} dTotal={dTotal} />\r\n            </Col>\r\n            <Col md={4} sm={12} xs={12} lg={4}>\r\n              <DailyRecoverBar dDate={dDate} dRecover={dRecover} />\r\n            </Col>\r\n            <Col md={4} sm={12} xs={12} lg={4}>\r\n              <DistrictBarChart districtData={districtData} />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={7} sm={12} xs={12} lg={8}>\r\n              <div className=\"wrapAll1\">\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <h3>Hospital Statistics</h3>\r\n                  <span>\r\n                    updated {TimeCalculate(hospitals[0].created_at)} ago\r\n                  </span>\r\n                </div>\r\n\r\n                <Table responsive striped bordered hover variant=\"dark\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Hospital Name</th>\r\n                      <th>Cumulative Total</th>\r\n                      <th>Cumulative Sri Lankans</th>\r\n                      <th>Cumulative Foreigns</th>\r\n                      <th>Total Treatment</th>\r\n                      <th>Sri Lankans in Treatment</th>\r\n                      <th>Foreigns in Treatment</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {hospitals.length\r\n                      ? hospitals.map((hospital, id) => {\r\n                          return (\r\n                            <tr key={id}>\r\n                              <td>{hospital.id}</td>\r\n                              <td>{hospital.hospital.name}</td>\r\n                              <td>{hospital.cumulative_total}</td>\r\n                              <td>{hospital.cumulative_local}</td>\r\n                              <td>{hospital.cumulative_foreign}</td>\r\n                              <td>{hospital.treatment_total}</td>\r\n                              <td>{hospital.treatment_local}</td>\r\n                              <td>{hospital.treatment_foreign}</td>\r\n                            </tr>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </tbody>\r\n                </Table>\r\n                <div className=\"text-muted\">\r\n                  *Cumulative Total: Total number of Sri Lankan & Foreigns who\r\n                  have been treated /observed for COVID-19 in a given hospital.\r\n                  *Total Treatment: Total number of Sri Lankans & Foreigns who\r\n                  are currently on treatment/observation for COVID-19 in a given\r\n                  hospital\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col md={5} sm={12} xs={12} lg={4}>\r\n              <div className=\"wrapAll2\">\r\n                <div style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n                  <h3>Sri Lankans in Treatment</h3>\r\n                  <span>\r\n                    updated {TimeCalculate(hospitals[0].created_at)} ago\r\n                  </span>\r\n                </div>\r\n                <CumulativeChart hospitals={hospitals} />\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <span className=\"text-muted\">*Not included Foreigns</span>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faDatabase } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Styles = styled.div`\r\n  text-align: center;\r\n  padding: 10px;\r\n  position: relative;\r\n  width: 50%;\r\n  margin: auto;\r\n  font-size: 10px;\r\n  border-top: white solid 2px;\r\n  .link {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Styles>\r\n      <FontAwesomeIcon icon={faDatabase} /> source information -{\" \"}\r\n      <a\r\n        href=\"https://hpb.health.gov.lk/en\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"link\"\r\n      >\r\n        Health Promotion Bureau\r\n      </a>\r\n    </Styles>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport SLstats from \"./SLstats\";\r\nimport LoadingScreen from \"./LoadingScreen\";\r\nimport Worldstats from \"./Worldstats\";\r\nimport TableData from \"./TableData\";\r\nimport Footer from \"./Footer\";\r\nimport { readRemoteFile } from \"react-papaparse\";\r\n\r\nclass GetData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      details: [],\r\n      hospitals: [],\r\n      dDate: [],\r\n      dTotal: [],\r\n      dRecover: [],\r\n      dDeath: [],\r\n      districtData: [],\r\n      done: undefined,\r\n      dDone: undefined,\r\n      disDone: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://hpb.health.gov.lk/api/get-current-statistical\")\r\n      .then((response) => {\r\n        // console.log(response.data.data);\r\n        this.setState({\r\n          details: response.data.data,\r\n          hospitals: response.data.data.hospital_data,\r\n          done: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    readRemoteFile(\r\n      \"https://raw.githubusercontent.com/arimacdev/covid19-srilankan-data/master/Daily/covid_lk.csv\",\r\n      {\r\n        complete: (results) => {\r\n          // console.log(results.data[0]);\r\n          this.setState({\r\n            dDate: results.data[0],\r\n            dTotal: results.data[1],\r\n            dDeath: results.data[2],\r\n            dRecover: results.data[3],\r\n            dDone: true,\r\n          });\r\n        },\r\n      }\r\n    );\r\n\r\n    readRemoteFile(\r\n      \"https://raw.githubusercontent.com/arimacdev/covid19-srilankan-data/master/Districts/districts_lk.csv\",\r\n      {\r\n        complete: (results) => {\r\n          // console.log(results.data);\r\n          this.setState({\r\n            districtData: results.data,\r\n            disDone: true,\r\n          });\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  chooseWhatToRender = () => {\r\n    const {\r\n      details,\r\n      hospitals,\r\n      dDate,\r\n      dTotal,\r\n      dRecover,\r\n      dDeath,\r\n      districtData,\r\n    } = this.state;\r\n    const name = this.props.name;\r\n\r\n    if (!(this.state.done && this.state.dDone && this.state.disDone)) {\r\n      return <LoadingScreen />;\r\n    } else {\r\n      return (\r\n        <>\r\n          {name === \"SLstats\" ? (\r\n            <SLstats details={details} />\r\n          ) : (\r\n            <Worldstats details={details} />\r\n          )}\r\n          <TableData\r\n            hospitals={hospitals}\r\n            dDate={dDate}\r\n            dTotal={dTotal}\r\n            dDeath={dDeath}\r\n            dRecover={dRecover}\r\n            districtData={districtData}\r\n          />\r\n          <Footer />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <this.chooseWhatToRender />;\r\n  }\r\n}\r\n\r\nexport default GetData;\r\n","import React, { Component } from \"react\";\r\nimport Switch from \"react-switch\";\r\nimport styled from \"styled-components\";\r\nimport GetData from \"./GetData\";\r\n\r\nconst Styles = styled.div`\r\n  .react-switch {\r\n    vertical-align: middle;\r\n    margin-left: 4px;\r\n    margin-right: 4px;\r\n  }\r\n`;\r\n\r\nclass SwitchOnOff extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      checked: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(checked) {\r\n    this.setState({ checked });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Styles>\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n          <label>\r\n            <span\r\n              style={{ position: \"relative\" }}\r\n              className={this.state.checked ? \"text-muted\" : \"\"}\r\n            >\r\n              Sri Lanka Stats\r\n            </span>\r\n            <Switch\r\n              onChange={this.handleChange}\r\n              checked={this.state.checked}\r\n              className=\"react-switch\"\r\n              handleDiameter={48}\r\n              height={40}\r\n              width={88}\r\n              onColor=\"#00bcd4\"\r\n              offColor=\"#4caf50\"\r\n              uncheckedIcon={false}\r\n              checkedIcon={false}\r\n            />\r\n            <span\r\n              style={{ position: \"relative\" }}\r\n              className={this.state.checked ? \"\" : \"text-muted\"}\r\n            >\r\n              World Stats\r\n            </span>\r\n          </label>\r\n        </div>\r\n        {this.state.checked ? (\r\n          <GetData name=\"Worldstats\" />\r\n        ) : (\r\n          <GetData name=\"SLstats\" />\r\n        )}\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SwitchOnOff;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport SwitchOnOff from \"./SwitchOnOff\";\r\n\r\nfunction Layout(props) {\r\n  return (\r\n    <Container fluid>\r\n      <SwitchOnOff />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import Particles from \"react-particles-js\";\r\nimport React from \"react\";\r\n\r\nfunction ParticlesBG() {\r\n  return (\r\n    <Particles\r\n      params={{\r\n        particles: {\r\n          number: {\r\n            value: 15,\r\n            density: {\r\n              enable: true,\r\n              value_area: 800,\r\n            },\r\n          },\r\n          color: {\r\n            value: \"#131520\",\r\n          },\r\n          shape: {\r\n            type: \"polygon\",\r\n            stroke: {\r\n              width: 0,\r\n              color: \"#000\",\r\n            },\r\n            polygon: {\r\n              nb_sides: 7,\r\n            },\r\n            image: {\r\n              src: \"img/github.svg\",\r\n              width: 100,\r\n              height: 100,\r\n            },\r\n          },\r\n          opacity: {\r\n            value: 0.3,\r\n            random: true,\r\n            anim: {\r\n              enable: false,\r\n              speed: 1,\r\n              opacity_min: 0.1,\r\n              sync: false,\r\n            },\r\n          },\r\n          size: {\r\n            value: 60,\r\n            random: false,\r\n            anim: {\r\n              enable: true,\r\n              speed: 9.738283627510658,\r\n              size_min: 20,\r\n              sync: false,\r\n            },\r\n          },\r\n          line_linked: {\r\n            enable: false,\r\n            distance: 200,\r\n            color: \"#ffffff\",\r\n            opacity: 1,\r\n            width: 2,\r\n          },\r\n          move: {\r\n            enable: true,\r\n            speed: 3.204794372381079,\r\n            direction: \"none\",\r\n            random: false,\r\n            straight: false,\r\n            out_mode: \"out\",\r\n            bounce: false,\r\n            attract: {\r\n              enable: false,\r\n              rotateX: 600,\r\n              rotateY: 1200,\r\n            },\r\n          },\r\n        },\r\n        interactivity: {\r\n          detect_on: \"canvas\",\r\n          events: {\r\n            onhover: {\r\n              enable: false,\r\n              mode: \"grab\",\r\n            },\r\n            onclick: {\r\n              enable: false,\r\n              mode: \"push\",\r\n            },\r\n            resize: true,\r\n          },\r\n          modes: {\r\n            grab: {\r\n              distance: 400,\r\n              line_linked: {\r\n                opacity: 1,\r\n              },\r\n            },\r\n            bubble: {\r\n              distance: 400,\r\n              size: 35.964035964035965,\r\n              duration: 2,\r\n              opacity: 8,\r\n              speed: 3,\r\n            },\r\n            repulse: {\r\n              distance: 200,\r\n              duration: 0.4,\r\n            },\r\n            push: {\r\n              particles_nb: 8,\r\n            },\r\n            remove: {\r\n              particles_nb: 2,\r\n            },\r\n          },\r\n        },\r\n        retina_detect: true,\r\n      }}\r\n      style={{\r\n        position: \"fixed\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ParticlesBG;\r\n","import React from \"react\";\r\nimport { Container, Image, Jumbotron, Col } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faLinkedin,\r\n  faFacebook,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport \"./About.css\";\r\nimport ParticlesBg from \"particles-bg\";\r\nimport me from \"./assets/me.jpg\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <Container>\r\n      <Jumbotron>\r\n        <ParticlesBg type=\"color\" bg={true} />\r\n        <Container style={{ margin: 0, padding: \"20px\" }}>\r\n          <Col>\r\n            <Image src={me} roundedCircle />\r\n            <div className=\"darkRec\">\r\n              <h4>Vishwa Prabhathiya</h4>\r\n              <p style={{ padding: 0 }}>\r\n                Undergraduate student at Rajarata University of Sri lanka\r\n              </p>\r\n              <hr />\r\n              <p>HTML/CSS | Bootstrap | React | JavaScript</p>\r\n              <div\r\n                style={{\r\n                  margin: \"auto\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                {/* LinkedIn */}\r\n                <a\r\n                  href=\"https://www.linkedin.com/in/vishwa-prabhathiya\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <span\r\n                    style={{ fontSize: \"3em\", color: \"white\", padding: \"8px\" }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faLinkedin} className=\"linkedin\" />\r\n                  </span>\r\n                </a>\r\n                {/* Github */}\r\n                <a\r\n                  href=\"https://github.com/VishwaPrabhathiya\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <span\r\n                    style={{ fontSize: \"3em\", color: \"white\", padding: \"8px\" }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faGithub} className=\"github\" />\r\n                  </span>\r\n                </a>\r\n                {/* Facebook */}\r\n                <a\r\n                  href=\"https://www.facebook.com/vprabhathiya\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <span\r\n                    style={{ fontSize: \"3em\", color: \"white\", padding: \"8px\" }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faFacebook} className=\"facebook\" />\r\n                  </span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Container>\r\n      </Jumbotron>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport Layout from \"./components/Layout\";\r\nimport ParticlesBG from \"./components/ParticlesBG\";\r\nimport About from \"./components/About\";\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <ParticlesBG />\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <NavigationBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Layout} />\r\n          <Route path=\"/about\" component={About} />\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}